<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <ApplicationIcon>TaskSeq.ico</ApplicationIcon>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Computation expression `taskSeq` for processing IAsyncEnumerable sequences</Title>
    <Version>$(Version)</Version>
    <Authors>Abel Braaksma; Don Syme</Authors>
    <Description>The `taskSeq` computation expression combines the power of `seq` and `task` of F# 6.0 to work with IAsyncEnumerable sequences seamlessly. 
Build on top of the success of `task` using statically compiled resumable state machines under the hood.</Description>
    <Copyright>Copyright 2022 Abel Braaksma</Copyright>
    <PackageProjectUrl>https://github.com/fsprojects/FSharp.Control.TaskSeq</PackageProjectUrl>
    <PackageIcon>taskseq-icon.png</PackageIcon>
    <PackageOutputPath>..\..\packages</PackageOutputPath>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OtherFlags></OtherFlags>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OtherFlags></OtherFlags>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Utils.fs" />
    <Compile Include="TaskSeqBuilder.fs" />
    <Compile Include="TaskSeqInternal.fs" />
    <Compile Include="TaskSeq.fsi" />
    <Compile Include="TaskSeq.fs" />
  </ItemGroup>



  <ItemGroup>
    <None Include="..\..\taskseq-icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
</Project>
